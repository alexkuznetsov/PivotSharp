@model PivotSharp.Web.Models.EditPivotConfigViewModel

<style scoped>
	.field-list {
		min-height: 30px; /* Drop zone for sortable */
		background-color: #eee;
	}

		.field-list:not(.filters) .filter-input {
			display: none;
		}

		.field-list:not(.aggregators) .aggregator-select {
			display: none;
		}

	.glyphicon {
		color: #337ab7;
	}

	.field-list .form-control {
		margin-left: 10px;margin-right: 10px;
	}

</style>


<div class="row">

	<div class="col-md-4">
		<div class="panel panel-info">
			<div class="panel-heading">
				<h3 class="panel-title">Field List</h3>
			</div>
			<div class="panel-body" style="max-height: 600px; overflow-y: scroll;">
				<div style="padding-left: 0;" id="fieldList" class="source field-list">
					@foreach (var column in Model.Columns.OrderBy(s => s.Name)) {
						<div class="list-group-item form-inline">
							<!-- Grab Handle -->
							<span class="glyphicon glyphicon-move" aria-hidden="true"></span>

							<!-- Aggregation -->
							<select class="aggregator-select form-control">
								@foreach (var aggregator in Model.Aggregators) {
									<option value="@aggregator">@aggregator</option>
								}
							</select>

							<span>@column.Name (@column.DataType)</span>

							<!-- Filter Operator -->
							<select class="operator-select filter-input form-control">
								@foreach (var filter in Model.FilterOperators) {
									<option value="@filter.Op">@filter.Op</option>
								}
							</select>

							<!-- Value -->
							<input type="@column.HtmlInputType" class="parameter filter-input form-control" data-field-name="@column.Name" placeholder="@column.Name" style="margin-top:-12px;" />

						</div>
					}
				</div>
			</div>
		</div>

	</div>

	<div class="col-md-8">
		<div class="panel panel-info">
			<div class="panel-heading">
				<h3 class="panel-title">Config</h3>
			</div>
			<div class="panel-body">

				<table class="table table-condensed table-bordered">
					<thead>
						<tr>
							<td colspan="2">
								<div class="list-group-item active">Filters</div>
								<div id="filterList" class="field-list filters">
								</div>
							</td>
						</tr>
						<tr>
							<td></td>
							<td>
								<div class="list-group-item active">Cols</div>
								<div id="colList" class="field-list">
								</div>

							</td>
						</tr>
					</thead>
					<tbody>
						<tr>
							<td>
								<div class="list-group-item active">Rows</div>
								<div id="rowList" class="field-list">
								</div>

							</td>
							<td>
								<div class="list-group-item active">Aggregators</div>
								<div id="aggregatorList" class="field-list aggregators"></div>
							</td>
						</tr>
					</tbody>
				</table>


			</div>
		</div>

	</div>

</div>


<script type="text/javascript">

	$(document).ready(function () {

		$('.field-list:not(.filters)').each(function(i, obj) {
			Sortable.create(obj, {
				handle: '.glyphicon-move',
				group: 'fields',
				filter: '.active',
				animation: 150
			});
		});

		$('.field-list.filters').each(function (i, obj) {
			Sortable.create(obj, {
				handle: '.glyphicon-move',
				group: 'fields',
				filter: '.active',
				animation: 150,
				onAdd: function (evt) {
					// May want to move the typeahead code here to limit db calls.
					var itemEl = evt.item;  // dragged HTMLElement
					//$(itemEl).find('.parameter:text').each(function (i, obj) {
				}
			});

		});

		$('.field-list.source').find('.parameter:text').each(function (i, obj) {

			var fieldName = $(this).data("field-name");

			var items = new Bloodhound({
				datumTokenizer: Bloodhound.tokenizers.whitespace,
				queryTokenizer: Bloodhound.tokenizers.whitespace,
				// url points to a json file that contains an array of country names, see
				// https://github.com/twitter/typeahead.js/blob/gh-pages/data/countries.json
				prefetch: 'GetColumnValues?columnName=' + fieldName
			});

			// Take top 5 to show as defaults when nothing types.
			function withDefaults(q, sync) {
				if (q === '') {
					sync(items.all().slice(0,5));
				} else {
					items.search(q, sync);
				}
			}

			$(obj).typeahead({
				minLength: 0,
				highlight: true
			}, {
				name: fieldName,
				source: withDefaults
			});
		});



	});
</script>