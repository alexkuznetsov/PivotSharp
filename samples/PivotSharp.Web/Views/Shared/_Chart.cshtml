@using Newtonsoft.Json
@using PivotSharp.Extensions
@model PivotSharp.PivotTable

@* aspect ratios listed at http://gionkunz.github.io/chartist-js/getting-started.html#creating-a-chart-using-aspect-ratios *@
<div class="ct-chart ct-double-octave"></div>

@{
	var top10 = Model.Values
		.Rows
		.Select(row => new {
			FlattenedKey = row.Key, 
			Row = row.Value.NaturalSort(c => c.Key), 
			RowSum = Model.Rows.Single(r => r.FlattenedKey == row.Key).Value
		})
		.OrderByDescending(row => row.RowSum)
		.Take(5);
}

<script type="text/javascript">

	var labels = @(Html.Raw(JsonConvert.SerializeObject(Model.Cols.Select(r => r.FlattenedKey).NaturalSort(r => r))));
	var legends = @(Html.Raw(JsonConvert.SerializeObject(top10.Select(r => r.FlattenedKey))));

	// Issues with gaps in data...
	var series = @(Html.Raw(JsonConvert.SerializeObject(top10.Select(row => row.Row.Select(v => v.Value[0].Value)))));


	var data = {
		// A labels array that can contain any sort of values
		labels: labels,
		// Our series array that contains series objects or in this case series data arrays
		series: series
	};

	// Create a new line chart object where as first parameter we pass in a selector
	// that is resolving to our chart container element. The Second parameter
	// is the actual data object.
	var chart = new Chartist.Line('.ct-chart', data, {
		plugins: [
			Chartist.plugins.legend({
				legendNames: legends,
				clickable: true,
				onClick: function(chart, e) {
				}
			})
		]
	});

	var isFirstRun = true;

	// Hide All. Actually hides all but the last one, because of the way the legend plugin works.
	chart.on('created', function() {
		if (!isFirstRun) return;
		isFirstRun = false;
		$('.ct-legend').append("<li class='toggle'>Hide All</li>");
		$('.ct-legend .toggle').on('click', function() {
			var $this = $(this);
			if ($this.text() == "Hide All") {
				$(".ct-legend li:not(.toggle,.inactive)").each(function(index) {
						$(this).trigger('click');
					});
				$this.text("Show All");
			} else {
				$(".ct-legend li.inactive:not(.toggle)").each(function(index) {
					$(this).trigger('click');
				});
				$this.text("Hide All");
			}
		});

	});

</script>
