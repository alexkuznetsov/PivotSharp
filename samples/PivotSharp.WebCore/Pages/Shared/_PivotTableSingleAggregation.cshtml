@using PivotSharp.Extensions
@model PivotSharp.PivotTable


<style scoped>
	/* Be good to have a way to only hover where non-empty. Css can't detect empty content. May need an attribute '*/
	table {
		width: auto !important;
	}

	.table > tbody > tr > td:hover {
		background-color: #eee;
	}

	.table > tbody > tr > td:not(.empty):hover {
		cursor: pointer;
	}

	thead th {
		text-align: center;
	}

	tbody td, tfoot td, tbody th:last-child, tfoot tr:last-child th {
		text-align: right;
	}
</style>

<table class="table table-bordered">
	<thead>
		<tr>
			<!-- Field Names -->
			<td colspan="@Model.Rows.Fields.Count()" rowspan="@(Model.Cols.Fields.Count() + 1)" style="vertical-align: bottom">
				@string.Join(" // ", Model.Rows.Fields)
			</td>
			<td colspan="@(Model.Cols.Count() + 1)">@string.Join(" // ", Model.Cols.Fields)</td>
		</tr>
		<!-- One row for each column field -->
		@foreach (var colField in Model.Cols.Fields) {
			<tr>
				<!-- Col Headers -->
				@foreach (var header in Model.Cols.GetHeaderGroupsForField(colField)) {
					<th colspan="@header.Count()">@header.First().Headers.First(h => h.FieldName == colField).Name</th>
				}
				<!-- Row Totals Header -->
				@* On the top row, add a Total cell which spans the header rows *@
				@if (Model.Cols.Fields.IndexOf(colField) == 0) {
					<th rowspan="@(Model.Cols.Fields.Count())">Total</th>
				}
			</tr>
		}
	</thead>
	<tbody>
		<!-- One row for each row header -->
		@foreach (var row in Model.Rows.NaturalSort(r => r.FlattenedKey)) {
			<tr>
				<!-- One column for each row field -->
				@foreach (var rowField in Model.Rows.Fields) {
					var header = row.Headers.Single(h => h.FieldName == rowField);
					if (header.GroupPosition == 0) {
						<th rowspan="@header.GroupCount">@header.Name</th>
					}
				}
				<!--  Cells -->
				@foreach (var col in Model.Cols.NaturalSort(c => c.FlattenedKey)) {
					var cellValue = Model.GetValue(row.FlattenedKey, col.FlattenedKey);
					if (cellValue != null && cellValue[0].HasEntries) {
						<td class="data-cell" data-row-key="@row.FlattenedKey" data-col-key="@col.FlattenedKey">
							@Model.GetValue(row.FlattenedKey, col.FlattenedKey)[0].FormattedValue
						</td>
					} else {
						<td class="empty"></td>
					}
				}
				<!-- Row Totals -->
				<th>@row.Aggregators[0].FormattedValue</th>
			</tr>
		}
	</tbody>
	<tfoot>
		<tr>
			<th colspan="@Model.Rows.Fields.Count()">Grand Total</th>
			@foreach (var col in Model.Cols.NaturalSort(c => c.FlattenedKey)) {
				<th>@col.Aggregators[0].FormattedValue</th>
			}
			<th>@Model.GrandTotal[0].FormattedValue</th>

		</tr>
	</tfoot>
</table>
